#####
# This is the YAML configuration file for webgen used to set configuration options.
#
# The general syntax is:
#
#   configuration.option.name: value
#
# For example, to set a different default language, you would do:
#
#   website.lang: de
#
# Have a look at the documentation of the individual configuration options to see the allowed format
# of the values. Since this is a YAML file, you can easily set configuration options as strings,
# integers, dates, arrays, hashes and more.
#
# The available configuration options can be found on the homepage in the Configuration Option
# Reference at
#
#     http://webgen.rubyforge.org/documentation/reference_configuration.html
#
# Some common use cases are shown below.
#####

## The default processing pipeline for page files. If you use a different markup language you need to
## change 'markdown' to the short name of the content processor for the markup language.
default_processing_pipeline:
  Page: erb,tags,markdown,blocks,fragments

## Setting the default language. The argument must be an ISO-639-1/2 language code.
# website.lang: de

## Adding some extensions to the copy source handler.
# patterns:
#   Copy:
#     add: [**/*.pdf, **/*.djvu]

## === Customization ============================================================

##____________________________________________________________________
##                                                             sources

# Specifies one or more sources from which paths are read. This can
# also be used, for example, to additionally add other directories as
# source directories that may or may not be located in the website
# directory.

sources: [[/, Webgen::Source::FileSystem, src/pages], [/, Webgen::Source::FileSystem, src/images]]

##____________________________________________________________________
##                                                              output

# Specifies the output class that should be used for writing out the
# generated paths.
#
# Syntax:
#     [NAME, ARG1, ARG2, ...]
# where NAME is the name of the output class (for example,
# Webgen::Output::FileSystem) and ARG1, ARG2 and so on are the parameters
# for the output class. The supported parameters can be found in the
# documentation for each output class.

output: [Webgen::Output::FileSystem, site]
