---
title: "Manchmal gibt es Dinge"
in_menu: false
author: Lars Baehren
---

## {title:} ##

_Thu, 25. June 2009 -- 10:17_

... welche man wirklich nicht zu Gesicht bekommen moechte.

Ich weiss, eigentlich sollte ich heute kaum etwas anderes machen als mich um meine Reisevorbereitungen zu kuemmeren. Als ein Teil dessen sehe ich aber auch, dass ich noch ein wenig den Code aufraeume, welchen ich in den letzten beiden Tagen produziert habe, damit alles vor der Abreise eingecheckt werden kann. Nachdem ich meine Koordinaten-Klassen weitestgehend fertiggestellt habe (wenn auch noch nicht alle, welche mir da vorschweben), so wollte ich wenigstens noch sichergehen, dass der neue Code zu keinen Komplikationen fuehrt, wenn andere Teile der Software dagegen gebaut werden; folgerichtig habe ich also meine Bleeding-Edge Version der DAL installiert und dann damit begonnen die CR-Tools zu bauen. Dabei habe ich -- wieder einmal -- eine kilometerlange Liste an Warnmeldungen ausgespuckt bekommen, welche allesamt von Kalpanas Code kamen. Da mich zurueckliegende Erfahrung ja gelehrt hat, dass dies sehr mit Vorsicht zu geniessen ist, habe ich also mal einen Blick darauf geworfen, um zumindest da Groebste noch auszubuegeln. Ist dann doch wieder eine etwas laengere Aktion geworden, weil der Code einfach so undurchsichtig und schlecht geschrieben ist, dass es wirklich schwer wird alles so umzuorganisieren, dass es einigermassen lesbar und verstaendlich ist.

~~~~
  NuMoonTrigger::NuMoonTrigger( std::string const &filename,
				uint const& n_samples,
				double const& simTEC,
				double const& sampling_rate,
				uint const& nyquist_zone,
				uint const& time_int_bins,
                                double const& TEC,
				const Vector<double>& ppf_coeff,
				const Vector<double>& ppf_invcoeff,
				const Vector<double> freq_range,
				double const& peak_power,
				const Vector<uint>& RCU_id ) 
 {
  //n_frames = 0 ;
 }
~~~~

Wer obiges Beispiel als ein Vorbild fuer objekt-orientiertes Programmieren betrachtet, sollte sich lieber nie auf eine Stelle bewerben, wo er/sie auch nur entfernt das Risiko laeuft C++ Code zu produzieren; dieser "Constructor" ist nur eines von vielen Beispielen, welche ich hier auffuehren koennte um zu belegen, wie gerne ich am liebsten alles rausschmeissen und sauber implemtiert haben moechte.
